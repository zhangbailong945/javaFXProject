/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tjumyk;

import javafx.beans.property.IntegerProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;

/**
 *
 * @author E40-G8C
 */
// Generated by JFXTableClassBuilder
// Inputs:
// id,String
// name,String
// tid,Integer
// tname,String
// point,Integer
// min_grade,Integer
// cancel_year,Integer
// End
public class CourseTableRecord {

    StringProperty id;
    StringProperty name;
    IntegerProperty tid;
    StringProperty tname;
    IntegerProperty point;
    IntegerProperty min_grade;
    IntegerProperty cancel_year;

    public CourseTableRecord(String id, String name, Integer tid, String tname, Integer point,
            Integer min_grade, Integer cancel_year) {
        setId(id);
        setName(name);
        setTid(tid);
        setTname(tname);
        setPoint(point);
        setMin_grade(min_grade);
        setCancel_year(cancel_year);
    }

    public StringProperty idProperty() {
        if (id == null) {
            id = new SimpleStringProperty();
        }
        return id;
    }

    public String getId() {
        return idProperty().get();
    }

    public void setId(String value) {
        idProperty().set(value);
    }

    public StringProperty nameProperty() {
        if (name == null) {
            name = new SimpleStringProperty();
        }
        return name;
    }

    public String getName() {
        return nameProperty().get();
    }

    public void setName(String value) {
        nameProperty().set(value);
    }

    public IntegerProperty tidProperty() {
        if (tid == null) {
            tid = new SimpleIntegerProperty();
        }
        return tid;
    }

    public Integer getTid() {
        return tidProperty().get();
    }

    public void setTid(Integer value) {
        tidProperty().set(value);
    }

    public StringProperty tnameProperty() {
        if (tname == null) {
            tname = new SimpleStringProperty();
        }
        return tname;
    }

    public String getTname() {
        return tnameProperty().get();
    }

    public void setTname(String value) {
        tnameProperty().set(value);
    }

    public IntegerProperty pointProperty() {
        if (point == null) {
            point = new SimpleIntegerProperty();
        }
        return point;
    }

    public Integer getPoint() {
        return pointProperty().get();
    }

    public void setPoint(Integer value) {
        pointProperty().set(value);
    }

    public IntegerProperty min_gradeProperty() {
        if (min_grade == null) {
            min_grade = new SimpleIntegerProperty();
        }
        return min_grade;
    }

    public Integer getMin_grade() {
        return min_gradeProperty().get();
    }

    public void setMin_grade(Integer value) {
        min_gradeProperty().set(value);
    }

    public IntegerProperty cancel_yearProperty() {
        if (cancel_year == null) {
            cancel_year = new SimpleIntegerProperty();
        }
        return cancel_year;
    }

    public Integer getCancel_year() {
        return cancel_yearProperty().get();
    }

    public void setCancel_year(Integer value) {
        cancel_yearProperty().set(value);
    }
// Code Example of building corresponding TableColumns:
//
// TableColumnBuilder.create().text("id").cellValueFactory(new PropertyValueFactory("id")).prefWidth(200).build(),
// TableColumnBuilder.create().text("name").cellValueFactory(new PropertyValueFactory("name")).prefWidth(200).build(),
// TableColumnBuilder.create().text("tid").cellValueFactory(new PropertyValueFactory("tid")).prefWidth(200).build(),
// TableColumnBuilder.create().text("tname").cellValueFactory(new PropertyValueFactory("tname")).prefWidth(200).build(),
// TableColumnBuilder.create().text("point").cellValueFactory(new PropertyValueFactory("point")).prefWidth(200).build(),
// TableColumnBuilder.create().text("min_grade").cellValueFactory(new PropertyValueFactory("min_grade")).prefWidth(200).build(),
// TableColumnBuilder.create().text("cancel_year").cellValueFactory(new PropertyValueFactory("cancel_year")).prefWidth(200).build()
}
